Resources:
    PubPrivateVPC:
        Type: "AWS::EC2::VPC"
        Properties:
            CidrBlock: "10.0.0.0/16"
            EnableDnsSupport: true
            EnableDnsHostnames: false
            InstanceTenancy: "default"
            Tags: 
              - 
                Key: "Name"
                Value: "PubPrivateVPC"

    PublicSubnet:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !Sub "${AWS::Region}b"
            CidrBlock: "10.0.100.0/24"
            VpcId: !Ref PubPrivateVPC
            MapPublicIpOnLaunch: false
            Tags: 
              - 
                Key: "Name"
                Value: "PublicSubnet"

    PrivateSubnet:
        Type: "AWS::EC2::Subnet"
        Properties:
            AvailabilityZone: !Sub "${AWS::Region}a"
            CidrBlock: "10.0.0.0/24"
            VpcId: !Ref PubPrivateVPC
            MapPublicIpOnLaunch: false
            Tags: 
              - 
                Key: "Name"
                Value: "PrivateSubnet"
    
    InternetGateway:
        Type: "AWS::EC2::InternetGateway"
        Properties:
            Tags: 
              - 
                Key: "Name"
                Value: "InternetGateway"
             
    PublicNetworkAcl:
        Type: "AWS::EC2::NetworkAcl"
        Properties:
            VpcId: !Ref PubPrivateVPC
            Tags: 
              - 
                Key: "Name"
                Value: "PublicACL"
                
    PrivateNetworkAcl:
        Type: "AWS::EC2::NetworkAcl"
        Properties:
            VpcId: !Ref PubPrivateVPC
            Tags: 
              - 
                Key: "Name"
                Value: "PrivateACL"
    
    SubnetNetworkAclAssociation:
        Type: "AWS::EC2::SubnetNetworkAclAssociation"
        Properties:
            SubnetId: !Ref PublicSubnet
            NetworkAclId: !Ref PublicNetworkAcl

    SubnetNetworkAclAssociation2:
        Type: "AWS::EC2::SubnetNetworkAclAssociation"
        Properties:
            SubnetId: !Ref PrivateSubnet 
            NetworkAclId: !Ref PrivateNetworkAcl

    PublicRouteTable:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref PubPrivateVPC
            Tags: 
              - 
                Key: "Name"
                Value: "PublicRouteTable"
              - 
                Key: "Network"
                Value: "Public"
  
    PrivateRouteTable:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref PubPrivateVPC
            Tags: 
              - 
                Key: "Network"
                Value: "Private"            
              - 
                Key: "Name"
                Value: "PrivateRouteTable"

    PublicSubnetRouteTableAssociation:
        Type: "AWS::EC2::SubnetRouteTableAssociation"
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet

    PrivateSubnetRouteTableAssociation:
        Type: "AWS::EC2::SubnetRouteTableAssociation"
        Properties:
            RouteTableId: !Ref PrivateRouteTable
            SubnetId: !Ref PrivateSubnet

    PublicNetworkAclEntry1:
        Type: "AWS::EC2::NetworkAclEntry"
        Properties:
            CidrBlock: "0.0.0.0/0"
            Egress: true
            NetworkAclId: !Ref PublicNetworkAcl
            Protocol: -1
            RuleAction: "allow"
            RuleNumber: 100

    PublicNetworkAclEntry2:
        Type: "AWS::EC2::NetworkAclEntry"
        Properties:
            CidrBlock: "0.0.0.0/0"
            Egress: false
            NetworkAclId: !Ref PublicNetworkAcl
            Protocol: -1
            RuleAction: "allow"
            RuleNumber: 100
            
    PrivateNetworkAclEntry1:
        Type: "AWS::EC2::NetworkAclEntry"
        Properties:
            CidrBlock: "0.0.0.0/0"
            Egress: true
            NetworkAclId: !Ref PrivateNetworkAcl
            Protocol: -1
            RuleAction: "allow"
            RuleNumber: 100

    PrivateNetworkAclEntry2:
        Type: "AWS::EC2::NetworkAclEntry"
        Properties:
            CidrBlock: "0.0.0.0/0"
            Egress: false
            NetworkAclId: !Ref PrivateNetworkAcl
            Protocol: -1
            RuleAction: "allow"
            RuleNumber: 100        

    PubPrivateVPCGatewayAttachment:
        Type: "AWS::EC2::VPCGatewayAttachment"
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref PubPrivateVPC 

    PublicRoute:
        Type: "AWS::EC2::Route"
        Properties:
            DestinationCidrBlock: "0.0.0.0/0"
            GatewayId: !Ref InternetGateway
            RouteTableId: !Ref PublicRouteTable
    
    ELBSecurityGroup:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "Load Balancing Security Group"
            GroupName: "LoadBalancingSG"
            Tags: 
              - 
                Key: "Name"
                Value: "LoadBalancingSG"
            VpcId: !Ref PubPrivateVPC
            SecurityGroupIngress: 
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 80
                IpProtocol: "tcp"
                ToPort: 80
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 443
                IpProtocol: "tcp"
                ToPort: 443
            SecurityGroupEgress: 
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 80
                IpProtocol: "tcp"
                ToPort: 80
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 443
                IpProtocol: "tcp"
                ToPort: 443
     
    RDSSecurityGroup:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "Wordpress Database SG"
            GroupName: "SecurityGroups-WordpressDBSG-14AMOS1495RH8"
            Tags: 
              - 
                Key: "Name"
                Value: "WordpressDBSG"
            VpcId: !Ref PubPrivateVPC
            SecurityGroupIngress: 
              - 
                CidrIp: "10.0.0.0/16"
                FromPort: 3306
                IpProtocol: "tcp"
                ToPort: 3306
            SecurityGroupEgress: 
              - 
                CidrIp: "10.0.0.0/16"
                FromPort: 3306
                IpProtocol: "tcp"
                ToPort: 3306

    IntranetSecurityGroup:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "Intranet Security Group"
            GroupName: "SecurityGroups-IntranetSG-9HF0HJQLZPFC"
            Tags: 
              - 
                Key: "Name"
                Value: "IntranetSG"
            VpcId: !Ref PubPrivateVPC
            SecurityGroupIngress: 
              - 
                CidrIp: "10.0.0.0/16"
                IpProtocol: "-1"
              - 
                CidrIp: "192.168.100.0/24"
                IpProtocol: "-1"
            SecurityGroupEgress: 
              - 
                CidrIp: "10.0.0.0/16"
                IpProtocol: "-1"
              - 
                CidrIp: "192.168.100.0/24"
                IpProtocol: "-1"

    DockerSecurityGroup:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "Docker Wordpress EC2 SG"
            GroupName: "SecurityGroups-DockerWordpressSG-EL0MQ35F7L2G"
            Tags: 
              - 
                Key: "Name"
                Value: "DockerWordpressSG"
            VpcId: !Ref PubPrivateVPC
            SecurityGroupIngress: 
              - 
                CidrIp: "10.0.0.0/16"
                FromPort: 3306
                IpProtocol: "tcp"
                ToPort: 3306
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 80
                IpProtocol: "tcp"
                ToPort: 80
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 22
                IpProtocol: "tcp"
                ToPort: 22
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 443
                IpProtocol: "tcp"
                ToPort: 443
            SecurityGroupEgress: 
              - 
                CidrIp: "10.0.0.0/16"
                FromPort: 3306
                IpProtocol: "tcp"
                ToPort: 3306
              - 
                CidrIp: "0.0.0.0/0"
                IpProtocol: "-1"